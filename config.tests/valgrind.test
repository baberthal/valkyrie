#!/bin/sh
#
# param $1: cache file to write to
# param $2: value of VG_DIR, possibly set by user on cmd-line
# param $3: value of VG_EXEC_PATH, possibly set by user on cmd-line
# param $4: value of VG_SUPP_DIR, possibly set by user on cmd-line
#

CACHE_FILE=$1
VG_DIR=$2
VG_EXEC_PATH=$3
VG_SUPP_DIR=$4

# minimum valgrind version we need
VG_VERSION=3.0.0
VG_VERSION_NUM=3

# list of paths to search for valgrind executable
EXEC_DIR_SEARCH="/usr/bin /usr/local/bin /opt/valgrind/bin"

# list of paths to search for suppression files
SUPP_DIR_SEARCH="/usr/lib/valgrind /usr/local/lib/valgrind /opt/valgrind/"


# include all the bits and pieces we need for output
testdir=`dirname $0`
source "$testdir/logging.sh"

# ------------------------------------------------------------------
found=no
result=no
echo "$sh_me:$LINENO: checking for valgrind" >&5
echo $ECHO_N "checking for valgrind... $ECHO_C" >&6

# might have been pre-set to preserve params
if [ "$VG_DIR" = "no" ] ; then 
  VG_DIR="" 
fi

# check to see if user supplied --vg-dir=<dirname>
if [ ! -z "$VG_DIR" ] ; then
  vg_exec="$VG_DIR/bin/valgrind"
  if [ -x "$vg_exec" ] ; then 
    VG_EXEC_PATH="$vg_exec"
    VG_SUPP_DIR="$VG_DIR/lib/valgrind"
    found=yes
    result="$VG_EXEC_PATH"
  fi
fi

# not found - see if user supplied vg-exec and/or vg-supp
if [ x"$found" = xno ] ; then
  if [ ! -z "$VG_EXEC_PATH" ] ; then
    if [ -x "$VG_EXEC_PATH" ] ; then
      found=yes
      result="$VG_EXEC_PATH"
      VG_DIR=`dirname $VG_EXEC_PATH`
      VG_DIR=`dirname $VG_DIR`
      if [ -z "$VG_SUPP_DIR" ] ; then 
        VG_SUPP_DIR="$VG_DIR/lib/valgrind"
      fi
    fi
  fi
fi

# guess $VG_EXEC_PATH 
if [ x"$found" = xno ] ; then
  for dir in $EXEC_DIR_SEARCH; do
    if [ -x "$exe/valgrind" ] ; then
      VG_EXEC_PATH="$exe/valgrind"
      result="$VG_EXEC_PATH"
      found=yes
      break
    fi
  done
fi

echo "${ECHO_T}$result" >&6

if [ x"$found" = xno ] ; then
  echo "************************************************************************" >&2
  echo "************************************************************************" >&2
  echo "   Warning: Cannot find valgrind." >&2
  echo "   You can set the path to valgrind later, within Valkyrie," >&2
  echo "   or rerun configure now with --vg-dir=/path/to/valgrind/tree." >&2
  echo "************************************************************************" >&2
  echo "************************************************************************" >&2
  exit 0
fi


# check valgrind version -------------------------------------------
result=no
found=no

echo "$sh_me:$LINENO: checking valgrind version >= $VG_VERSION" >&5
echo $ECHO_N "checking valgrind version >= $VG_VERSION... $ECHO_C" >&6

ver=`$VG_EXEC_PATH --version | sed "s,^valgrind-\([0-9]*\)\..*,\1,"`
if [ "$ver" -ge "$VG_VERSION_NUM" ] ; then
  result="yes"
  found=yes
fi
echo "${ECHO_T}$result" >&6

if [ x"$found" = xno ] ; then
  echo "************************************************************************" >&2
  echo "************************************************************************" >&2
  echo "   Warning: Valgrind version >= $VG_VERSION is required."
  echo "   You can set the path to a more recent valgrind later, within Valkyrie," >&2
  echo "   or rerun configure now with --vg-dir=/path/to/valgrind/tree." >&2
  echo "************************************************************************" >&2
  echo "************************************************************************" >&2
  exit 0
fi



# try and find the suppressions path -------------------------------
echo "$sh_me:$LINENO: checking valgrind's suppressions path" >&5
echo $ECHO_N "checking valgrind's suppressions path... $ECHO_C" >&6

# even if set on the cmd-line, make sure we can find it
found=no
result=no
if [ ! -z "$VG_SUPP_DIR" ] ; then
  # strip any trailing slashes
  VG_SUPP_DIR=`echo $VG_SUPP_DIR | sed -e "s,^\(.*\)\/$,\1,"`
  # quick 'n dirty check
  if [ -f "$VG_SUPP_DIR/default.supp" ] ; then 
    result="$VG_SUPP_DIR"
    found=yes
  fi
fi

if [ x"$found" = xno ] ; then
  for dir in $SUPP_DIR_SEARCH; do
    if [ -f "$dir/default.supp" ] ; then 
      VG_SUPP_DIR="$dir"
      result="$VG_SUPP_DIR"
      found=yes
      break;
    fi
  done
fi

echo "${ECHO_T}$result" >&6

if [ x"$found" = xno ] ; then
  echo "************************************************************************" >&2
  echo "************************************************************************" >&2
  echo "   Warning: Cannot find valgrind's suppressions path." >&2
  echo "   ." >&2
  echo "   You can set the suppressions path later, within Valkyrie," >&2
  echo "   or rerun configure now with --vg-supp=/path/to/suppdir." >&2
  echo "************************************************************************" >&2
  echo "************************************************************************" >&2
  exit 0
fi

echo "VG_EXEC_PATH=$VG_EXEC_PATH" >> $CACHE_FILE
echo "VG_SUPP_DIR=$VG_SUPP_DIR" >> $CACHE_FILE

exit 0
