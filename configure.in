# Process this file with autoconf to produce a configure script.

########################################################################
# ? AC_PREREQ(2.59)
AC_INIT(Valkyrie, 1.3.0.SVN, info@open-works.co.uk)
AC_CONFIG_SRCDIR([valkyrie/main.cpp])
AC_CONFIG_HEADER([config.h])
AC_CONFIG_MACRO_DIR(m4)
AM_INIT_AUTOMAKE

# ? AM_MAINTAINER_MODE

# ? AC_REVISION


########################################################################
# setup QT env - defined in m4/bnv_have_qt.m4
BNV_HAVE_QT

if test x$have_qt != xyes; then
   AC_MSG_ERROR([Can't build without QT.])
fi


########################################################################
# Checks for options

# Find valgrind
AC_ARG_WITH([vg], [  --with-valgrind=PROGRAM   Valgrind executable ], VALGRIND=$withval)
if test x"$VALGRIND" != x ; then
   # given as arg: give msg
   AC_MSG_CHECKING([for valgrind])
   AC_MSG_RESULT([$VALGRIND])
else
   # not given as arg: try path
   AC_CHECK_PROG([VALGRIND], [valgrind], [`which valgrind`])
fi

if test x"$VALGRIND" = x ; then
   # Valgrind not found
   AC_MSG_WARN([Valgrind not found: may be configured at runtime.])

else
  # Valgrind found: check is ok

  AC_MSG_CHECKING([valgrind version (need >= 3.0.0)])
  VG_VERSION_MAJOR_MIN=3
  VG_VERSION=`$VALGRIND --version | sed "s/^valgrind-//"`
  AC_MSG_RESULT([$VG_VERSION])
  VG_VERSION_MAJOR=`echo $VG_VERSION | sed "s/^\([[0-9\]]*\)\..*/\1/"`
  if test $VG_VERSION_MAJOR -lt $VG_VERSION_MAJOR_MIN ; then
     $VALGRIND=""
     AC_MSG_WARN([Not configuring for valgrind: need minimum version of 3.0.0.  Please configure with a more recent version of valgrind (may be done at runtime).])
  fi
fi




########################################################################
# Checks for programs.
AC_PROG_LN_S
AC_PROG_CC
##AM_PROG_CC_C_O
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_RANLIB


########################################################################
# Checks for libraries


########################################################################
# Checks for headers
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([fcntl.h limits.h malloc.h stdlib.h string.h unistd.h])
# ? AC_CHECK_HEADERS(errno.h strings.h unistd.h)


########################################################################
# Checks for typedefs / structures
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME


########################################################################
# Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_ERROR_AT_LINE
AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([dup2 memset mkdir select socket strchr strrchr])



########################################################################
# Setup useful global defines in config.h

# Get install path
# Only expect to have a working setup after make install, so is fine
VK_INSTALL_PREFIX=$prefix
if test $VK_INSTALL_PREFIX = NONE ; then
   VK_INSTALL_PREFIX=`pwd`
fi

# valkyrie installation paths
AC_DEFINE_UNQUOTED(VK_INSTALL_PREFIX, "$VK_INSTALL_PREFIX", [valkyrie install prefix])
AC_DEFINE_UNQUOTED(VK_DOC_PATH,       "/doc/",              [valkyrie install doc path])
AC_DEFINE_UNQUOTED(VG_DOC_PATH,       "/doc/vg-html/",      [valgrind install doc path])

# valkyrie config paths
AC_DEFINE_UNQUOTED(VK_CFG_DIR,   ".$PACKAGE",      [valkyrie config dir])
AC_DEFINE_UNQUOTED(VK_DBASE_DIR, "/dbase/",        [valkyrie config dbase dir])
AC_DEFINE_UNQUOTED(VK_LOGS_DIR,  "/logs/",         [valkyrie config logs dir])
AC_DEFINE_UNQUOTED(VK_SUPPS_DIR, "/suppressions/", [valkyrie config supps dir])

# programs
AC_DEFINE_UNQUOTED(BIN_VALGRIND, "$VALGRIND",                          [valgrind executable])
AC_DEFINE_UNQUOTED(BIN_LOGMERGE, "$VK_INSTALL_PREFIX/bin/vk_logmerge", [log-merge executable])

# misc
AC_DEFINE_UNQUOTED(VK_COPYRIGHT, "(c) 2003-2006", [copyright])
AC_DEFINE_UNQUOTED(VK_AUTHOR,    "OpenWorks LLP", [author])
AC_DEFINE_UNQUOTED(VG_COPYRIGHT, "(c) 2000-2006 and GNU GPL'd by Julian Seward et al.", [valgrind copyright])



########################################################################
# All done.
AC_OUTPUT(
   Makefile
   valkyrie/Makefile
   vk_logmerge/Makefile
   doc/Makefile
   doc/images/Makefile
   doc/vg-html/Makefile
   doc/vg-html/images/Makefile
)

#   tests/Makefile
#   tests/vk_regtest
#   valkyrie/tests/Makefile
#   vk_logmerge/tests/Makefile

