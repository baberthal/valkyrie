# Process this file with autoconf to produce a configure script.

########################################################################
# ? AC_PREREQ(2.59)
AC_INIT(Valkyrie, 1.3.0.SVN, info@open-works.co.uk)
AC_CONFIG_SRCDIR([valkyrie/main.cpp])
AC_CONFIG_HEADER([config.h])
AC_CONFIG_MACRO_DIR(m4)
AM_INIT_AUTOMAKE

# ? AM_MAINTAINER_MODE

# ? AC_REVISION


########################################################################
# setup QT env - defined in m4/gwqt.m4
BNV_HAVE_QT

if test x$have_qt != xyes; then
   AC_MSG_ERROR([Can't build without QT.])
fi


########################################################################
# Checks for options

# Find valgrind
AC_ARG_WITH([vg], [  --with-vg=PROGRAM       Valgrind executable ], VALGRIND=$withval)
if test x"$VALGRIND" != x ; then
   # given as arg: give msg
   AC_MSG_CHECKING([for valgrind])
   AC_MSG_RESULT([$VALGRIND])
else
   # not given as arg: try path
   AC_CHECK_PROG([VALGRIND], [valgrind], [`which valgrind`])
fi

if test x"$VALGRIND" = x ; then
   # Valgrind not found
   AC_MSG_WARN([Valgrind not found: may be configured at runtime, or rerun configure now with --with-vg=/path/to/valgrind])

else
  # Valgrind found: check is ok

  AC_MSG_CHECKING([valgrind version (need >= 3.0.0)])
  VG_VERSION_MAJOR_MIN=3
  VG_VERSION=`$VALGRIND --version | sed "s/^valgrind-//"`
  AC_MSG_RESULT([$VG_VERSION])
  VG_VERSION_MAJOR=`echo $VG_VERSION | sed "s/^\([[0-9\]]*\)\..*/\1/"`
  if test $VG_VERSION_MAJOR -lt $VG_VERSION_MAJOR_MIN ; then
     $VALGRIND=""
     AC_MSG_WARN([Not configuring for valgrind: need minimum version of 3.0.0.  Please reconfigure with a more recent version of valgrind.])
  fi
fi




########################################################################
# Checks for programs.
AC_PROG_LN_S
AC_PROG_CC
##AM_PROG_CC_C_O
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_RANLIB


########################################################################
# Checks for libraries


########################################################################
# Checks for headers
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([fcntl.h limits.h malloc.h stdlib.h string.h unistd.h])
# ? AC_CHECK_HEADERS(errno.h strings.h unistd.h)


########################################################################
# Checks for typedefs / structures
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME


########################################################################
# Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_ERROR_AT_LINE
AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([dup2 memset mkdir select socket strchr strrchr])



########################################################################
# Setup useful global defines

# TODO: use AC_DEFINE to put these in config.h instead?

# Get install path
# Only expect to have a working setup after make install, so is fine
VK_INSTALL_PREFIX=$prefix
if test $VK_INSTALL_PREFIX = NONE ; then
   VK_INSTALL_PREFIX=`pwd`
fi

rm -f ./valkyrie/vk_include.h
cat >> ./valkyrie/vk_include.h <<EOF
/* ----------------------------------------------------------------------
 * Generated by configure                                    vk_include.h
 * ----------------------------------------------------------------------
 * This file is part of Valkyrie, a front-end for Valgrind
 * Copyright (c) 2000-2006, OpenWorks LLP <info@open-works.co.uk>
 * This program is released under the terms of the GNU GPL v.2
 * See the file LICENSE.GPL for the full license details.
 */

#ifndef __VK_INCLUDE_H
#define __VK_INCLUDE_H

/* valkyrie paths relative to install dir --------------------------- */
#define VK_INSTALL_PREFIX "$VK_INSTALL_PREFIX"
#define VK_DOC_PATH       "/doc/"
#define VG_DOC_PATH       "/doc/vg-html/"

/* valkyrie paths relative to home_dir/.valkyrie -------------------- */
#define VK_DBASE_DIR      "/dbase/"
#define VK_LOGS_DIR       "/logs/"
#define VK_SUPPS_DIR      "/suppressions/"

/* valgrind --------------------------------------------------------- */
#define VG_EXEC_PATH      "$VALGRIND"

/* other executables ------------------------------------------------ */
#define VK_LOGMERGE       "$VK_INSTALL_PREFIX/bin/vk_logmerge"

/* names ------------------------------------------------------------ */
#define VK_NAME           "$PACKAGE_NAME"
#define Vk_Name           "valkyrie"        // same, but smalls

/* version, as 'MAJOR-NUMBER.MINOR-NUMBER[.PATCHLEVEL]' ------------- */
#define VK_VERSION        "$PACKAGE_VERSION"
#define VK_COPYRIGHT      "(c) 2003-2006"
#define VK_AUTHOR         "OpenWorks LLP"
#define VK_EMAIL          "$PACKAGE_BUGREPORT"
/* so we do not have to update hard-wired-in dates for valgrind */
#define VG_COPYRIGHT      "(c) 2000-2006, and GNU GPL'd, by Julian Seward et al."

#endif
EOF


########################################################################
# All done.
AC_OUTPUT(
   Makefile
   valkyrie/Makefile
   vk_logmerge/Makefile
   doc/Makefile
   doc/images/Makefile
   doc/vg-html/Makefile
   doc/vg-html/images/Makefile
)

#   tests/Makefile
#   tests/vk_regtest
#   valkyrie/tests/Makefile
#   vk_logmerge/tests/Makefile

